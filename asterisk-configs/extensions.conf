; Asterisk Dialplan Configuration
; Extension 7000 - AudioSocket with Recording for Debugging
; Extension 1000 - Conference Room
; Conference Test Context - Plays audio for testing

[default]
; Extension 7000 - AudioSocket (exact match has priority over pattern)
exten => 7000,1,Goto(from-sip-custom,7000,1)

; Extension 7001 - AudioSocket (port 5052)
exten => 7001,1,Goto(from-sip-custom,7001,1)

; Route other inbound SIP calls to translation conference
exten => _X.,1,NoOp(=== Inbound SIP Call ===)
 same => n,Set(CALLERID(name)=${CALLERID(name)})
 same => n,Set(CONFERENCE_ID=${EXTEN})
 same => n,Goto(translation-conference,${EXTEN},1)

[from-internal]
; Extension 7000 - AudioSocket
exten => 7000,1,Goto(from-sip-custom,7000,1)

; Extension 7001 - AudioSocket (port 5052)
exten => 7001,1,Goto(from-sip-custom,7001,1)

; Conference room 1000
exten => 1000,1,Goto(translation-conference,1000,1)

; Conference room 2000
exten => 2000,1,Goto(translation-conference,2000,1)

; Echo test
exten => 8888,1,NoOp(Echo test)
 same => n,Answer()
 same => n,Playback(hello-world)
 same => n,Echo()
 same => n,Hangup()

; Test audio extension (plays tone continuously)
exten => 9999,1,NoOp(=== Audio Test ===)
 same => n,Answer()
 same => n,Playback(hello-world)
 same => n,Playback(demo-congrats)
 same => n,Wait(1)
 same => n,Playback(hello-world)
 same => n,Playback(demo-congrats)
 same => n,Wait(1)
 same => n,Goto(3)

[public]
exten => 7000,1,Goto(from-sip-custom,7000,1)

; Extension 7001 - AudioSocket (port 5052)
exten => 7001,1,Goto(from-sip-custom,7001,1)
exten => _X.,1,NoOp(=== Default Context ===)
 same => n,Playback(invalid)
 same => n,Hangup()

; AudioSocket extension for 7000 - WITH MULTI-LANGUAGE CONFERENCE BRIDGE AUTO-DIALING
[from-sip-custom]
exten => 7000,1,NoOp(=== Multi-Language Conference Bridge with Auto-Dialing ===)
 same => n,Set(CONFERENCE_ID=7000)
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Playback(beep)

 ; Get language settings from global variables (set by dashboard)
 same => n,Set(SOURCE_LANG=${GLOBAL(qa_source_lang)})
 same => n,Set(TARGET_LANG=${GLOBAL(qa_target_lang)})
 same => n,Set(CUSTOMER_EXT=${GLOBAL(qa_customer_extension)})

 ; Determine which bridge the agent should join
 ; If source language is English, join English bridge (1000), else join target bridge (2000)
 same => n,Set(AGENT_BRIDGE=${IF($["${SOURCE_LANG}" = "en"]?1000:2000)})
 same => n,Set(CUSTOMER_BRIDGE=${IF($["${SOURCE_LANG}" = "en"]?2000:1000)})

 same => n,NoOp(Agent will join bridge: ${AGENT_BRIDGE})
 same => n,NoOp(Customer will join bridge: ${CUSTOMER_BRIDGE})
 same => n,NoOp(Customer extension: ${CUSTOMER_EXT})

 ; Initiate outbound call to customer extension if selected
 same => n,GotoIf($["${CUSTOMER_EXT}" = ""]?skip_autodial)
 same => n,NoOp(Initiating outbound call to customer extension: ${CUSTOMER_EXT})
 same => n,System(asterisk -rx "channel originate PJSIP/${CUSTOMER_EXT} application ConfBridge ${CUSTOMER_BRIDGE},default_bridge,default_user" &)

 ; Join agent to appropriate bridge with AudioSocket for translation
 same => n(skip_autodial),NoOp(Joining agent to bridge ${AGENT_BRIDGE} via AudioSocket)
 same => n,Set(CALL_UUID=${FILTER(a-zA-Z0-9-,${SHELL(uuidgen)})})
 same => n,NoOp(Call UUID: ${CALL_UUID})
 same => n,Set(RECORDING_FILE=/tmp/recording-${CALL_UUID})
 same => n,AudioSocket(${CALL_UUID},127.0.0.1:5050)
 same => n,Hangup()

; Extension 7001 - Second AudioSocket orchestrator (port 5052)
exten => 7001,1,NoOp(=== Multi-Language Conference Bridge 7001 ===)
 same => n,Set(CONFERENCE_ID=7001)
 same => n,Ringing()
 same => n,Wait(1)
 same => n,Answer()
 same => n,Playback(beep)

 ; Get language settings from global variables (set by dashboard)
 same => n,Set(SOURCE_LANG=${GLOBAL(qa_source_lang)})
 same => n,Set(TARGET_LANG=${GLOBAL(qa_target_lang)})
 same => n,Set(CUSTOMER_EXT=${GLOBAL(qa_customer_extension)})

 ; Determine which bridge the agent should join
 ; If source language is English, join English bridge (1000), else join target bridge (2000)
 same => n,Set(AGENT_BRIDGE=${IF($["${SOURCE_LANG}" = "en"]?1000:2000)})
 same => n,Set(CUSTOMER_BRIDGE=${IF($["${SOURCE_LANG}" = "en"]?2000:1000)})

 same => n,NoOp(Agent will join bridge: ${AGENT_BRIDGE})
 same => n,NoOp(Customer will join bridge: ${CUSTOMER_BRIDGE})
 same => n,NoOp(Customer extension: ${CUSTOMER_EXT})

 ; Initiate outbound call to customer extension if selected
 same => n,GotoIf($["${CUSTOMER_EXT}" = ""]?skip_autodial)
 same => n,NoOp(Initiating outbound call to customer extension: ${CUSTOMER_EXT})
 same => n,System(asterisk -rx "channel originate PJSIP/${CUSTOMER_EXT} application ConfBridge ${CUSTOMER_BRIDGE},default_bridge,default_user" &)

 ; Join agent to appropriate bridge with AudioSocket for translation
 same => n(skip_autodial),NoOp(Joining agent to bridge ${AGENT_BRIDGE} via AudioSocket)
 same => n,Set(CALL_UUID=${FILTER(a-zA-Z0-9-,${SHELL(uuidgen)})})
 same => n,NoOp(Call UUID: ${CALL_UUID})
 same => n,Set(RECORDING_FILE=/tmp/recording-${CALL_UUID})
 same => n,AudioSocket(${CALL_UUID},127.0.0.1:5052)
 same => n,Hangup()


[translation-conference]
; Translation conference room (1000-9999)
exten => _X.,1,NoOp(=== Translation Conference Room ${EXTEN} ===)
 same => n,Answer()
 same => n,Stasis(translation-app,${EXTEN})
 same => n,Hangup()

; Test audio context - used by automated test script
[conference-test]
exten => test-audio,1,NoOp(=== Conference Test Audio ===)
 same => n,Answer()
 same => n,Wait(1)
 same => n,Playback(hello-world)
 same => n,Playback(demo-congrats)
 same => n,Playback(demo-abouttotry)
 same => n,Playback(demo-echotest)
 same => n,Wait(2)
 same => n,Goto(3)  ; Loop: play audio continuously
